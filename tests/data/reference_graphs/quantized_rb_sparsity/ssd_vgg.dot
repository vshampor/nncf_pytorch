strict digraph  {
"0 /nncf_model_input" [id=0, scope="", type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize" [id=1, scope=SymmetricQuantizer, type=symmetric_quantize];
"2 SSD_VGG/__getitem__" [id=2, scope=SSD_VGG, type=__getitem__];
"3 SSD_VGG/unsqueeze" [id=3, scope=SSD_VGG, type=unsqueeze];
"4 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=4, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"5 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=5, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"6 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=6, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"7 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d" [id=7, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]", type=conv2d];
"8 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[1]/batch_norm" [id=8, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[1]", type=batch_norm];
"9 SSD_VGG/MultiOutputSequential[basenet]/ReLU[2]/RELU" [id=9, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[2]", type=RELU];
"10 SSD_VGG/MultiOutputSequential[basenet]/ReLU[2]/SymmetricQuantizer/symmetric_quantize" [id=10, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"11 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=11, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"12 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=12, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"13 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=13, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"14 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/conv2d" [id=14, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]", type=conv2d];
"15 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[4]/batch_norm" [id=15, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[4]", type=batch_norm];
"16 SSD_VGG/MultiOutputSequential[basenet]/ReLU[5]/RELU" [id=16, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[5]", type=RELU];
"17 SSD_VGG/MultiOutputSequential[basenet]/ReLU[5]/SymmetricQuantizer/symmetric_quantize" [id=17, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"18 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[6]/max_pool2d" [id=18, scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[6]", type=max_pool2d];
"19 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=19, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=20, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"21 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=21, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"22 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d" [id=22, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]", type=conv2d];
"23 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[8]/batch_norm" [id=23, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[8]", type=batch_norm];
"24 SSD_VGG/MultiOutputSequential[basenet]/ReLU[9]/RELU" [id=24, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[9]", type=RELU];
"25 SSD_VGG/MultiOutputSequential[basenet]/ReLU[9]/SymmetricQuantizer/symmetric_quantize" [id=25, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[9]/SymmetricQuantizer", type=symmetric_quantize];
"26 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=26, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"27 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=27, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"28 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=28, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"29 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d" [id=29, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]", type=conv2d];
"30 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[11]/batch_norm" [id=30, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[11]", type=batch_norm];
"31 SSD_VGG/MultiOutputSequential[basenet]/ReLU[12]/RELU" [id=31, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[12]", type=RELU];
"32 SSD_VGG/MultiOutputSequential[basenet]/ReLU[12]/SymmetricQuantizer/symmetric_quantize" [id=32, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[12]/SymmetricQuantizer", type=symmetric_quantize];
"33 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[13]/max_pool2d" [id=33, scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[13]", type=max_pool2d];
"34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=34, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"35 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=35, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"36 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=36, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"37 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d" [id=37, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]", type=conv2d];
"38 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[15]/batch_norm" [id=38, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[15]", type=batch_norm];
"39 SSD_VGG/MultiOutputSequential[basenet]/ReLU[16]/RELU" [id=39, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[16]", type=RELU];
"40 SSD_VGG/MultiOutputSequential[basenet]/ReLU[16]/SymmetricQuantizer/symmetric_quantize" [id=40, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[16]/SymmetricQuantizer", type=symmetric_quantize];
"41 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=41, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"42 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=42, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"43 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=43, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"44 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d" [id=44, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]", type=conv2d];
"45 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[18]/batch_norm" [id=45, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[18]", type=batch_norm];
"46 SSD_VGG/MultiOutputSequential[basenet]/ReLU[19]/RELU" [id=46, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[19]", type=RELU];
"47 SSD_VGG/MultiOutputSequential[basenet]/ReLU[19]/SymmetricQuantizer/symmetric_quantize" [id=47, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[19]/SymmetricQuantizer", type=symmetric_quantize];
"48 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=48, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"49 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=49, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"50 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=50, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/conv2d" [id=51, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]", type=conv2d];
"52 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[21]/batch_norm" [id=52, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[21]", type=batch_norm];
"53 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/RELU" [id=53, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]", type=RELU];
"54 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/SymmetricQuantizer/symmetric_quantize" [id=54, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/SymmetricQuantizer", type=symmetric_quantize];
"55 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/max_pool2d" [id=55, scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]", type=max_pool2d];
"56 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=56, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"57 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=57, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"58 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=58, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"59 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d" [id=59, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]", type=conv2d];
"60 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[25]/batch_norm" [id=60, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[25]", type=batch_norm];
"61 SSD_VGG/MultiOutputSequential[basenet]/ReLU[26]/RELU" [id=61, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[26]", type=RELU];
"62 SSD_VGG/MultiOutputSequential[basenet]/ReLU[26]/SymmetricQuantizer/symmetric_quantize" [id=62, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[26]/SymmetricQuantizer", type=symmetric_quantize];
"63 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=63, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"64 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=64, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=65, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"66 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/conv2d" [id=66, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]", type=conv2d];
"67 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[28]/batch_norm" [id=67, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[28]", type=batch_norm];
"68 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/RELU" [id=68, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]", type=RELU];
"69 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/SymmetricQuantizer/symmetric_quantize" [id=69, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/SymmetricQuantizer", type=symmetric_quantize];
"70 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=70, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"71 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=71, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"72 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=72, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"73 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/conv2d" [id=73, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]", type=conv2d];
"74 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[31]/batch_norm" [id=74, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[31]", type=batch_norm];
"75 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/RELU" [id=75, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]", type=RELU];
"76 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/SymmetricQuantizer/symmetric_quantize" [id=76, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/SymmetricQuantizer", type=symmetric_quantize];
"77 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[33]/max_pool2d" [id=77, scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[33]", type=max_pool2d];
"78 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=78, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"79 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=79, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"80 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=80, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"81 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/conv2d" [id=81, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]", type=conv2d];
"82 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[35]/batch_norm" [id=82, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[35]", type=batch_norm];
"83 SSD_VGG/MultiOutputSequential[basenet]/ReLU[36]/RELU" [id=83, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[36]", type=RELU];
"84 SSD_VGG/MultiOutputSequential[basenet]/ReLU[36]/SymmetricQuantizer/symmetric_quantize" [id=84, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[36]/SymmetricQuantizer", type=symmetric_quantize];
"85 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=85, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"86 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=86, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"87 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=87, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"88 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/conv2d" [id=88, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]", type=conv2d];
"89 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[38]/batch_norm" [id=89, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[38]", type=batch_norm];
"90 SSD_VGG/MultiOutputSequential[basenet]/ReLU[39]/RELU" [id=90, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[39]", type=RELU];
"91 SSD_VGG/MultiOutputSequential[basenet]/ReLU[39]/SymmetricQuantizer/symmetric_quantize" [id=91, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[39]/SymmetricQuantizer", type=symmetric_quantize];
"92 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=92, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"93 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=93, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"94 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=94, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"95 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/conv2d" [id=95, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]", type=conv2d];
"96 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[41]/batch_norm" [id=96, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[41]", type=batch_norm];
"97 SSD_VGG/MultiOutputSequential[basenet]/ReLU[42]/RELU" [id=97, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[42]", type=RELU];
"98 SSD_VGG/MultiOutputSequential[basenet]/ReLU[42]/SymmetricQuantizer/symmetric_quantize" [id=98, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[42]/SymmetricQuantizer", type=symmetric_quantize];
"99 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[43]/max_pool2d" [id=99, scope="SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[43]", type=max_pool2d];
"100 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=100, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"101 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=101, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"102 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=102, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"103 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/conv2d" [id=103, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]", type=conv2d];
"104 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[45]/batch_norm" [id=104, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[45]", type=batch_norm];
"105 SSD_VGG/MultiOutputSequential[basenet]/ReLU[46]/RELU" [id=105, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[46]", type=RELU];
"106 SSD_VGG/MultiOutputSequential[basenet]/ReLU[46]/SymmetricQuantizer/symmetric_quantize" [id=106, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[46]/SymmetricQuantizer", type=symmetric_quantize];
"107 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=107, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"108 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=108, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"109 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=109, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"110 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/conv2d" [id=110, scope="SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]", type=conv2d];
"111 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[48]/batch_norm" [id=111, scope="SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[48]", type=batch_norm];
"112 SSD_VGG/MultiOutputSequential[basenet]/ReLU[49]/RELU" [id=112, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[49]", type=RELU];
"113 SSD_VGG/MultiOutputSequential[basenet]/ReLU[49]/SymmetricQuantizer/symmetric_quantize" [id=113, scope="SSD_VGG/MultiOutputSequential[basenet]/ReLU[49]/SymmetricQuantizer", type=symmetric_quantize];
"114 SSD_VGG/NNCFUserL2Norm[L2Norm]/div" [id=114, scope="SSD_VGG/NNCFUserL2Norm[L2Norm]", type=div];
"115 SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer/symmetric_quantize" [id=115, scope="SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer", type=symmetric_quantize];
"116 SSD_VGG/NNCFUserL2Norm[L2Norm]/__rmul__" [id=116, scope="SSD_VGG/NNCFUserL2Norm[L2Norm]", type=__rmul__];
"117 SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer/symmetric_quantize" [id=117, scope="SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer", type=symmetric_quantize];
"118 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=118, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"119 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=119, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"120 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=120, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"121 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d" [id=121, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]", type=conv2d];
"122 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[1]/batch_norm" [id=122, scope="SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[1]", type=batch_norm];
"123 SSD_VGG/MultiOutputSequential[extras]/ReLU[2]/RELU" [id=123, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[2]", type=RELU];
"124 SSD_VGG/MultiOutputSequential[extras]/ReLU[2]/SymmetricQuantizer/symmetric_quantize" [id=124, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[2]/SymmetricQuantizer", type=symmetric_quantize];
"125 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=125, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"126 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=126, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"127 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=127, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"128 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/conv2d" [id=128, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]", type=conv2d];
"129 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[4]/batch_norm" [id=129, scope="SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[4]", type=batch_norm];
"130 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/RELU" [id=130, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[5]", type=RELU];
"131 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/SymmetricQuantizer/symmetric_quantize" [id=131, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/SymmetricQuantizer", type=symmetric_quantize];
"132 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=132, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"133 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=133, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"134 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=134, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"135 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d" [id=135, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]", type=conv2d];
"136 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[7]/batch_norm" [id=136, scope="SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[7]", type=batch_norm];
"137 SSD_VGG/MultiOutputSequential[extras]/ReLU[8]/RELU" [id=137, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[8]", type=RELU];
"138 SSD_VGG/MultiOutputSequential[extras]/ReLU[8]/SymmetricQuantizer/symmetric_quantize" [id=138, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[8]/SymmetricQuantizer", type=symmetric_quantize];
"139 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=139, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"140 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=140, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"141 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=141, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"142 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/conv2d" [id=142, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]", type=conv2d];
"143 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[10]/batch_norm" [id=143, scope="SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[10]", type=batch_norm];
"144 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/RELU" [id=144, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[11]", type=RELU];
"145 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer/symmetric_quantize" [id=145, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer", type=symmetric_quantize];
"146 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=146, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"147 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=147, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"148 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=148, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"149 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d" [id=149, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]", type=conv2d];
"150 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[13]/batch_norm" [id=150, scope="SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[13]", type=batch_norm];
"151 SSD_VGG/MultiOutputSequential[extras]/ReLU[14]/RELU" [id=151, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[14]", type=RELU];
"152 SSD_VGG/MultiOutputSequential[extras]/ReLU[14]/SymmetricQuantizer/symmetric_quantize" [id=152, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[14]/SymmetricQuantizer", type=symmetric_quantize];
"153 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=153, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"154 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=154, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"155 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=155, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"156 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/conv2d" [id=156, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]", type=conv2d];
"157 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[16]/batch_norm" [id=157, scope="SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[16]", type=batch_norm];
"158 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/RELU" [id=158, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[17]", type=RELU];
"159 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/SymmetricQuantizer/symmetric_quantize" [id=159, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/SymmetricQuantizer", type=symmetric_quantize];
"160 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=160, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"161 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=161, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"162 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=162, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"163 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d" [id=163, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]", type=conv2d];
"164 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[19]/batch_norm" [id=164, scope="SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[19]", type=batch_norm];
"165 SSD_VGG/MultiOutputSequential[extras]/ReLU[20]/RELU" [id=165, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[20]", type=RELU];
"166 SSD_VGG/MultiOutputSequential[extras]/ReLU[20]/SymmetricQuantizer/symmetric_quantize" [id=166, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[20]/SymmetricQuantizer", type=symmetric_quantize];
"167 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=167, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"168 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=168, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"169 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=169, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"170 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/conv2d" [id=170, scope="SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]", type=conv2d];
"171 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[22]/batch_norm" [id=171, scope="SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[22]", type=batch_norm];
"172 SSD_VGG/MultiOutputSequential[extras]/ReLU[23]/RELU" [id=172, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[23]", type=RELU];
"173 SSD_VGG/MultiOutputSequential[extras]/ReLU[23]/SymmetricQuantizer/symmetric_quantize" [id=173, scope="SSD_VGG/MultiOutputSequential[extras]/ReLU[23]/SymmetricQuantizer", type=symmetric_quantize];
"174 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=174, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"175 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=175, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"176 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=176, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"177 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d" [id=177, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]", type=conv2d];
"178 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=178, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"179 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=179, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"180 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=180, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"181 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d" [id=181, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]", type=conv2d];
"182 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute" [id=182, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]", type=permute];
"183 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute" [id=183, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]", type=permute];
"184 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=184, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"185 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=185, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"186 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=186, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"187 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d" [id=187, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]", type=conv2d];
"188 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=188, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"189 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=189, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"190 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=190, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"191 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d" [id=191, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]", type=conv2d];
"192 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute" [id=192, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]", type=permute];
"193 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute" [id=193, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]", type=permute];
"194 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=194, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"195 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=195, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"196 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=196, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"197 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d" [id=197, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]", type=conv2d];
"198 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=198, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"199 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=199, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"200 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=200, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"201 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d" [id=201, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]", type=conv2d];
"202 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute" [id=202, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]", type=permute];
"203 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute" [id=203, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]", type=permute];
"204 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=204, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"205 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=205, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"206 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=206, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"207 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d" [id=207, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]", type=conv2d];
"208 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=208, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"209 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=209, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"210 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=210, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"211 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d" [id=211, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]", type=conv2d];
"212 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute" [id=212, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]", type=permute];
"213 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute" [id=213, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]", type=permute];
"214 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=214, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"215 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=215, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"216 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=216, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"217 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d" [id=217, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]", type=conv2d];
"218 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=218, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"219 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=219, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"220 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=220, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"221 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d" [id=221, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]", type=conv2d];
"222 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute" [id=222, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]", type=permute];
"223 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute" [id=223, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]", type=permute];
"224 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=224, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"225 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=225, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"226 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=226, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"227 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d" [id=227, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]", type=conv2d];
"228 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" [id=228, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=calc_rb_binary_mask];
"229 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" [id=229, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]", type=apply_binary_mask];
"230 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" [id=230, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]", type=symmetric_quantize];
"231 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d" [id=231, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]", type=conv2d];
"232 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute" [id=232, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]", type=permute];
"233 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute" [id=233, scope="SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]", type=permute];
"234 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=234, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"235 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=235, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"236 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=236, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"237 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=237, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"238 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=238, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"239 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=239, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"240 SSD_VGG/SSDDetectionOutput[detection_head]/cat" [id=240, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=cat];
"241 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=241, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"242 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=242, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"243 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=243, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"244 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=244, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"245 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=245, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"246 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=246, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"247 SSD_VGG/SSDDetectionOutput[detection_head]/cat" [id=247, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=cat];
"248 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=248, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"249 SSD_VGG/SSDDetectionOutput[detection_head]/softmax" [id=249, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=softmax];
"250 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=250, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"251 SSD_VGG/SSDDetectionOutput[detection_head]/view" [id=251, scope="SSD_VGG/SSDDetectionOutput[detection_head]", type=view];
"252 /nncf_model_output" [id=252, scope="", type=nncf_model_output];
"253 /nncf_model_output" [id=253, scope="", type=nncf_model_output];
"0 /nncf_model_input" -> "1 SymmetricQuantizer/symmetric_quantize";
"1 SymmetricQuantizer/symmetric_quantize" -> "2 SSD_VGG/__getitem__";
"1 SymmetricQuantizer/symmetric_quantize" -> "7 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d";
"2 SSD_VGG/__getitem__" -> "3 SSD_VGG/unsqueeze";
"4 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "5 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"5 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "6 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"6 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "7 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d";
"7 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[0]/conv2d" -> "8 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[1]/batch_norm";
"8 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[1]/batch_norm" -> "9 SSD_VGG/MultiOutputSequential[basenet]/ReLU[2]/RELU";
"9 SSD_VGG/MultiOutputSequential[basenet]/ReLU[2]/RELU" -> "10 SSD_VGG/MultiOutputSequential[basenet]/ReLU[2]/SymmetricQuantizer/symmetric_quantize";
"10 SSD_VGG/MultiOutputSequential[basenet]/ReLU[2]/SymmetricQuantizer/symmetric_quantize" -> "14 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/conv2d";
"11 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "12 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"12 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "13 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"13 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "14 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/conv2d";
"14 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[3]/conv2d" -> "15 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[4]/batch_norm";
"15 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[4]/batch_norm" -> "16 SSD_VGG/MultiOutputSequential[basenet]/ReLU[5]/RELU";
"16 SSD_VGG/MultiOutputSequential[basenet]/ReLU[5]/RELU" -> "17 SSD_VGG/MultiOutputSequential[basenet]/ReLU[5]/SymmetricQuantizer/symmetric_quantize";
"17 SSD_VGG/MultiOutputSequential[basenet]/ReLU[5]/SymmetricQuantizer/symmetric_quantize" -> "18 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[6]/max_pool2d";
"18 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[6]/max_pool2d" -> "22 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d";
"19 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"20 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "21 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"21 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "22 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d";
"22 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[7]/conv2d" -> "23 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[8]/batch_norm";
"23 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[8]/batch_norm" -> "24 SSD_VGG/MultiOutputSequential[basenet]/ReLU[9]/RELU";
"24 SSD_VGG/MultiOutputSequential[basenet]/ReLU[9]/RELU" -> "25 SSD_VGG/MultiOutputSequential[basenet]/ReLU[9]/SymmetricQuantizer/symmetric_quantize";
"25 SSD_VGG/MultiOutputSequential[basenet]/ReLU[9]/SymmetricQuantizer/symmetric_quantize" -> "29 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d";
"26 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "27 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"27 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "28 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"28 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "29 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d";
"29 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[10]/conv2d" -> "30 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[11]/batch_norm";
"30 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[11]/batch_norm" -> "31 SSD_VGG/MultiOutputSequential[basenet]/ReLU[12]/RELU";
"31 SSD_VGG/MultiOutputSequential[basenet]/ReLU[12]/RELU" -> "32 SSD_VGG/MultiOutputSequential[basenet]/ReLU[12]/SymmetricQuantizer/symmetric_quantize";
"32 SSD_VGG/MultiOutputSequential[basenet]/ReLU[12]/SymmetricQuantizer/symmetric_quantize" -> "33 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[13]/max_pool2d";
"33 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[13]/max_pool2d" -> "37 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d";
"34 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "35 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"35 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "36 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"36 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "37 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d";
"37 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[14]/conv2d" -> "38 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[15]/batch_norm";
"38 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[15]/batch_norm" -> "39 SSD_VGG/MultiOutputSequential[basenet]/ReLU[16]/RELU";
"39 SSD_VGG/MultiOutputSequential[basenet]/ReLU[16]/RELU" -> "40 SSD_VGG/MultiOutputSequential[basenet]/ReLU[16]/SymmetricQuantizer/symmetric_quantize";
"40 SSD_VGG/MultiOutputSequential[basenet]/ReLU[16]/SymmetricQuantizer/symmetric_quantize" -> "44 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d";
"41 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "42 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"42 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "43 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"43 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "44 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d";
"44 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[17]/conv2d" -> "45 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[18]/batch_norm";
"45 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[18]/batch_norm" -> "46 SSD_VGG/MultiOutputSequential[basenet]/ReLU[19]/RELU";
"46 SSD_VGG/MultiOutputSequential[basenet]/ReLU[19]/RELU" -> "47 SSD_VGG/MultiOutputSequential[basenet]/ReLU[19]/SymmetricQuantizer/symmetric_quantize";
"47 SSD_VGG/MultiOutputSequential[basenet]/ReLU[19]/SymmetricQuantizer/symmetric_quantize" -> "51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/conv2d";
"48 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "49 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"49 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "50 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"50 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/conv2d";
"51 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[20]/conv2d" -> "52 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[21]/batch_norm";
"52 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[21]/batch_norm" -> "53 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/RELU";
"53 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/RELU" -> "54 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/SymmetricQuantizer/symmetric_quantize";
"54 SSD_VGG/MultiOutputSequential[basenet]/ReLU[22]/SymmetricQuantizer/symmetric_quantize" -> "55 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/max_pool2d";
"55 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[23]/max_pool2d" -> "59 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d";
"56 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "57 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"57 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "58 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"58 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "59 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d";
"59 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[24]/conv2d" -> "60 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[25]/batch_norm";
"60 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[25]/batch_norm" -> "61 SSD_VGG/MultiOutputSequential[basenet]/ReLU[26]/RELU";
"61 SSD_VGG/MultiOutputSequential[basenet]/ReLU[26]/RELU" -> "62 SSD_VGG/MultiOutputSequential[basenet]/ReLU[26]/SymmetricQuantizer/symmetric_quantize";
"62 SSD_VGG/MultiOutputSequential[basenet]/ReLU[26]/SymmetricQuantizer/symmetric_quantize" -> "66 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/conv2d";
"63 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "64 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"64 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"65 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "66 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/conv2d";
"66 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[27]/conv2d" -> "67 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[28]/batch_norm";
"67 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[28]/batch_norm" -> "68 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/RELU";
"68 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/RELU" -> "69 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/SymmetricQuantizer/symmetric_quantize";
"69 SSD_VGG/MultiOutputSequential[basenet]/ReLU[29]/SymmetricQuantizer/symmetric_quantize" -> "73 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/conv2d";
"70 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "71 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"71 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "72 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"72 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "73 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/conv2d";
"73 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[30]/conv2d" -> "74 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[31]/batch_norm";
"74 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[31]/batch_norm" -> "75 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/RELU";
"75 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/RELU" -> "76 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/SymmetricQuantizer/symmetric_quantize";
"76 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/SymmetricQuantizer/symmetric_quantize" -> "77 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[33]/max_pool2d";
"77 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[33]/max_pool2d" -> "81 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/conv2d";
"78 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "79 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"79 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "80 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"80 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "81 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/conv2d";
"81 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[34]/conv2d" -> "82 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[35]/batch_norm";
"82 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[35]/batch_norm" -> "83 SSD_VGG/MultiOutputSequential[basenet]/ReLU[36]/RELU";
"83 SSD_VGG/MultiOutputSequential[basenet]/ReLU[36]/RELU" -> "84 SSD_VGG/MultiOutputSequential[basenet]/ReLU[36]/SymmetricQuantizer/symmetric_quantize";
"84 SSD_VGG/MultiOutputSequential[basenet]/ReLU[36]/SymmetricQuantizer/symmetric_quantize" -> "88 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/conv2d";
"85 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "86 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"86 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "87 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"87 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "88 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/conv2d";
"88 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[37]/conv2d" -> "89 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[38]/batch_norm";
"89 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[38]/batch_norm" -> "90 SSD_VGG/MultiOutputSequential[basenet]/ReLU[39]/RELU";
"90 SSD_VGG/MultiOutputSequential[basenet]/ReLU[39]/RELU" -> "91 SSD_VGG/MultiOutputSequential[basenet]/ReLU[39]/SymmetricQuantizer/symmetric_quantize";
"91 SSD_VGG/MultiOutputSequential[basenet]/ReLU[39]/SymmetricQuantizer/symmetric_quantize" -> "95 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/conv2d";
"92 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "93 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"93 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "94 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"94 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "95 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/conv2d";
"95 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[40]/conv2d" -> "96 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[41]/batch_norm";
"96 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[41]/batch_norm" -> "97 SSD_VGG/MultiOutputSequential[basenet]/ReLU[42]/RELU";
"97 SSD_VGG/MultiOutputSequential[basenet]/ReLU[42]/RELU" -> "98 SSD_VGG/MultiOutputSequential[basenet]/ReLU[42]/SymmetricQuantizer/symmetric_quantize";
"98 SSD_VGG/MultiOutputSequential[basenet]/ReLU[42]/SymmetricQuantizer/symmetric_quantize" -> "99 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[43]/max_pool2d";
"76 SSD_VGG/MultiOutputSequential[basenet]/ReLU[32]/SymmetricQuantizer/symmetric_quantize" -> "114 SSD_VGG/NNCFUserL2Norm[L2Norm]/div";
"99 SSD_VGG/MultiOutputSequential[basenet]/MaxPool2d[43]/max_pool2d" -> "103 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/conv2d";
"100 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "101 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"101 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "102 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"102 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "103 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/conv2d";
"103 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[44]/conv2d" -> "104 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[45]/batch_norm";
"104 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[45]/batch_norm" -> "105 SSD_VGG/MultiOutputSequential[basenet]/ReLU[46]/RELU";
"105 SSD_VGG/MultiOutputSequential[basenet]/ReLU[46]/RELU" -> "106 SSD_VGG/MultiOutputSequential[basenet]/ReLU[46]/SymmetricQuantizer/symmetric_quantize";
"106 SSD_VGG/MultiOutputSequential[basenet]/ReLU[46]/SymmetricQuantizer/symmetric_quantize" -> "110 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/conv2d";
"107 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "108 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"108 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "109 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"109 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "110 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/conv2d";
"110 SSD_VGG/MultiOutputSequential[basenet]/NNCFConv2d[47]/conv2d" -> "111 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[48]/batch_norm";
"111 SSD_VGG/MultiOutputSequential[basenet]/BatchNorm2d[48]/batch_norm" -> "112 SSD_VGG/MultiOutputSequential[basenet]/ReLU[49]/RELU";
"112 SSD_VGG/MultiOutputSequential[basenet]/ReLU[49]/RELU" -> "113 SSD_VGG/MultiOutputSequential[basenet]/ReLU[49]/SymmetricQuantizer/symmetric_quantize";
"113 SSD_VGG/MultiOutputSequential[basenet]/ReLU[49]/SymmetricQuantizer/symmetric_quantize" -> "121 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d";
"113 SSD_VGG/MultiOutputSequential[basenet]/ReLU[49]/SymmetricQuantizer/symmetric_quantize" -> "187 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d";
"113 SSD_VGG/MultiOutputSequential[basenet]/ReLU[49]/SymmetricQuantizer/symmetric_quantize" -> "191 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d";
"114 SSD_VGG/NNCFUserL2Norm[L2Norm]/div" -> "115 SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer/symmetric_quantize";
"115 SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer/symmetric_quantize" -> "116 SSD_VGG/NNCFUserL2Norm[L2Norm]/__rmul__";
"116 SSD_VGG/NNCFUserL2Norm[L2Norm]/__rmul__" -> "117 SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer/symmetric_quantize";
"117 SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer/symmetric_quantize" -> "177 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d";
"117 SSD_VGG/NNCFUserL2Norm[L2Norm]/SymmetricQuantizer/symmetric_quantize" -> "181 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d";
"118 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "119 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"119 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "120 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"120 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "121 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d";
"121 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[0]/conv2d" -> "122 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[1]/batch_norm";
"122 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[1]/batch_norm" -> "123 SSD_VGG/MultiOutputSequential[extras]/ReLU[2]/RELU";
"123 SSD_VGG/MultiOutputSequential[extras]/ReLU[2]/RELU" -> "124 SSD_VGG/MultiOutputSequential[extras]/ReLU[2]/SymmetricQuantizer/symmetric_quantize";
"124 SSD_VGG/MultiOutputSequential[extras]/ReLU[2]/SymmetricQuantizer/symmetric_quantize" -> "128 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/conv2d";
"125 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "126 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"126 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "127 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"127 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "128 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/conv2d";
"128 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[3]/conv2d" -> "129 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[4]/batch_norm";
"129 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[4]/batch_norm" -> "130 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/RELU";
"130 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/RELU" -> "131 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/SymmetricQuantizer/symmetric_quantize";
"131 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/SymmetricQuantizer/symmetric_quantize" -> "135 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d";
"131 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/SymmetricQuantizer/symmetric_quantize" -> "197 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d";
"131 SSD_VGG/MultiOutputSequential[extras]/ReLU[5]/SymmetricQuantizer/symmetric_quantize" -> "201 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d";
"132 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "133 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"133 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "134 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"134 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "135 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d";
"135 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[6]/conv2d" -> "136 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[7]/batch_norm";
"136 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[7]/batch_norm" -> "137 SSD_VGG/MultiOutputSequential[extras]/ReLU[8]/RELU";
"137 SSD_VGG/MultiOutputSequential[extras]/ReLU[8]/RELU" -> "138 SSD_VGG/MultiOutputSequential[extras]/ReLU[8]/SymmetricQuantizer/symmetric_quantize";
"138 SSD_VGG/MultiOutputSequential[extras]/ReLU[8]/SymmetricQuantizer/symmetric_quantize" -> "142 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/conv2d";
"139 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "140 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"140 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "141 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"141 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "142 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/conv2d";
"142 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[9]/conv2d" -> "143 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[10]/batch_norm";
"143 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[10]/batch_norm" -> "144 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/RELU";
"144 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/RELU" -> "145 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer/symmetric_quantize";
"145 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer/symmetric_quantize" -> "149 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d";
"145 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer/symmetric_quantize" -> "207 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d";
"145 SSD_VGG/MultiOutputSequential[extras]/ReLU[11]/SymmetricQuantizer/symmetric_quantize" -> "211 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d";
"146 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "147 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"147 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "148 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"148 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "149 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d";
"149 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[12]/conv2d" -> "150 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[13]/batch_norm";
"150 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[13]/batch_norm" -> "151 SSD_VGG/MultiOutputSequential[extras]/ReLU[14]/RELU";
"151 SSD_VGG/MultiOutputSequential[extras]/ReLU[14]/RELU" -> "152 SSD_VGG/MultiOutputSequential[extras]/ReLU[14]/SymmetricQuantizer/symmetric_quantize";
"152 SSD_VGG/MultiOutputSequential[extras]/ReLU[14]/SymmetricQuantizer/symmetric_quantize" -> "156 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/conv2d";
"153 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "154 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"154 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "155 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"155 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "156 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/conv2d";
"156 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[15]/conv2d" -> "157 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[16]/batch_norm";
"157 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[16]/batch_norm" -> "158 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/RELU";
"158 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/RELU" -> "159 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/SymmetricQuantizer/symmetric_quantize";
"159 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/SymmetricQuantizer/symmetric_quantize" -> "163 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d";
"159 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/SymmetricQuantizer/symmetric_quantize" -> "217 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d";
"159 SSD_VGG/MultiOutputSequential[extras]/ReLU[17]/SymmetricQuantizer/symmetric_quantize" -> "221 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d";
"160 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "161 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"161 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "162 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"162 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "163 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d";
"163 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[18]/conv2d" -> "164 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[19]/batch_norm";
"164 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[19]/batch_norm" -> "165 SSD_VGG/MultiOutputSequential[extras]/ReLU[20]/RELU";
"165 SSD_VGG/MultiOutputSequential[extras]/ReLU[20]/RELU" -> "166 SSD_VGG/MultiOutputSequential[extras]/ReLU[20]/SymmetricQuantizer/symmetric_quantize";
"166 SSD_VGG/MultiOutputSequential[extras]/ReLU[20]/SymmetricQuantizer/symmetric_quantize" -> "170 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/conv2d";
"167 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "168 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"168 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "169 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"169 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "170 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/conv2d";
"170 SSD_VGG/MultiOutputSequential[extras]/NNCFConv2d[21]/conv2d" -> "171 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[22]/batch_norm";
"171 SSD_VGG/MultiOutputSequential[extras]/BatchNorm2d[22]/batch_norm" -> "172 SSD_VGG/MultiOutputSequential[extras]/ReLU[23]/RELU";
"172 SSD_VGG/MultiOutputSequential[extras]/ReLU[23]/RELU" -> "173 SSD_VGG/MultiOutputSequential[extras]/ReLU[23]/SymmetricQuantizer/symmetric_quantize";
"173 SSD_VGG/MultiOutputSequential[extras]/ReLU[23]/SymmetricQuantizer/symmetric_quantize" -> "227 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d";
"173 SSD_VGG/MultiOutputSequential[extras]/ReLU[23]/SymmetricQuantizer/symmetric_quantize" -> "231 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d";
"174 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "175 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"175 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "176 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"176 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "177 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d";
"177 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[loc]/conv2d" -> "182 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute";
"178 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "179 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"179 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "180 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"180 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "181 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d";
"181 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/NNCFConv2d[conf]/conv2d" -> "183 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute";
"182 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute" -> "234 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"183 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[0]/permute" -> "241 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"184 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "185 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"185 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "186 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"186 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "187 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d";
"187 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[loc]/conv2d" -> "192 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute";
"188 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "189 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"189 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "190 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"190 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "191 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d";
"191 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/NNCFConv2d[conf]/conv2d" -> "193 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute";
"192 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute" -> "235 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"193 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[1]/permute" -> "242 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"194 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "195 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"195 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "196 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"196 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "197 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d";
"197 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[loc]/conv2d" -> "202 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute";
"198 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "199 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"199 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "200 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"200 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "201 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d";
"201 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/NNCFConv2d[conf]/conv2d" -> "203 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute";
"202 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute" -> "236 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"203 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[2]/permute" -> "243 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"204 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "205 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"205 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "206 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"206 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "207 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d";
"207 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[loc]/conv2d" -> "212 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute";
"208 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "209 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"209 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "210 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"210 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "211 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d";
"211 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/NNCFConv2d[conf]/conv2d" -> "213 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute";
"212 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute" -> "237 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"213 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[3]/permute" -> "244 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"214 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "215 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"215 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "216 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"216 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "217 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d";
"217 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[loc]/conv2d" -> "222 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute";
"218 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "219 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"219 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "220 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"220 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "221 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d";
"221 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/NNCFConv2d[conf]/conv2d" -> "223 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute";
"222 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute" -> "238 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"223 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[4]/permute" -> "245 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"224 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "225 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"225 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "226 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"226 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "227 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d";
"227 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[loc]/conv2d" -> "232 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute";
"228 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/calc_rb_binary_mask" -> "229 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask";
"229 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[0]/RBSparsifyingWeight[op]/apply_binary_mask" -> "230 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize";
"230 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/ModuleDict[pre_ops]/UpdateWeight[1]/SymmetricQuantizer[op]/symmetric_quantize" -> "231 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d";
"231 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/NNCFConv2d[conf]/conv2d" -> "233 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute";
"232 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute" -> "239 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"233 SSD_VGG/SSDDetectionOutput[detection_head]/ModuleList[heads]/SSDHead[5]/permute" -> "246 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"234 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "240 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"235 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "240 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"236 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "240 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"237 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "240 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"238 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "240 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"239 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "240 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"240 SSD_VGG/SSDDetectionOutput[detection_head]/cat" -> "250 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"241 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "247 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"242 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "247 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"243 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "247 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"244 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "247 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"245 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "247 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"246 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "247 SSD_VGG/SSDDetectionOutput[detection_head]/cat";
"247 SSD_VGG/SSDDetectionOutput[detection_head]/cat" -> "248 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"247 SSD_VGG/SSDDetectionOutput[detection_head]/cat" -> "251 SSD_VGG/SSDDetectionOutput[detection_head]/view";
"248 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "249 SSD_VGG/SSDDetectionOutput[detection_head]/softmax";
"250 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "252 /nncf_model_output";
"251 SSD_VGG/SSDDetectionOutput[detection_head]/view" -> "253 /nncf_model_output";
}
