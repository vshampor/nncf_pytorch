strict digraph  {
"0 /nncf_model_input" [id=0, scope="", type=nncf_model_input];
"1 AsymmetricQuantizer/asymmetric_quantize" [id=1, scope=AsymmetricQuantizer, type=asymmetric_quantize];
"2 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=2, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=3, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"4 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=4, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"5 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=5, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"6 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=6, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=7, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"8 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=8, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/chunk" [id=9, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=chunk];
"10 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=10, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"11 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=11, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"12 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=12, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"13 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=13, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"14 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=14, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"15 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=15, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"16 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=16, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"17 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=17, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"18 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=18, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"19 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=19, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"20 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" [id=20, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"21 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=21, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"22 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=22, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"23 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=23, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=24, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"25 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=25, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" [id=26, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__add__];
"27 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=27, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"28 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" [id=28, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=tanh];
"29 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=29, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" [id=30, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]", type=__mul__];
"31 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=31, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"32 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=32, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"33 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" [id=33, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]", type=cat];
"34 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/view" [id=34, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]", type=view];
"35 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=35, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"36 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=36, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"37 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=37, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"38 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=38, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"39 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=39, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"40 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=40, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"41 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" [id=41, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__add__];
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/chunk" [id=42, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=chunk];
"43 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=43, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"44 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=44, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"45 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=45, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"46 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=46, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"47 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=47, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=48, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"49 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=49, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"50 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" [id=50, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=tanh];
"51 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=51, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"52 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=52, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"53 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" [id=53, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"54 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=54, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"55 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=55, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"56 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=56, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"57 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=57, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"58 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=58, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" [id=59, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__add__];
"60 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=60, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"61 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" [id=61, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=tanh];
"62 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=62, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" [id=63, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]", type=__mul__];
"64 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=64, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"65 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=65, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"66 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/cat" [id=66, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]", type=cat];
"67 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/view" [id=67, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]", type=view];
"68 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=68, scope="NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"69 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/AsymmetricQuantizer/asymmetric_quantize" [id=69, scope="NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/AsymmetricQuantizer", type=asymmetric_quantize];
"70 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=70, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"71 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=71, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"72 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=72, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"73 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=73, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"74 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=74, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"75 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=75, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"76 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" [id=76, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__add__];
"77 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/chunk" [id=77, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=chunk];
"78 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=78, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"79 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" [id=79, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"80 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=80, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"81 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=81, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"82 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" [id=82, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"83 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=83, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"84 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=84, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"85 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" [id=85, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=tanh];
"86 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=86, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"87 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=87, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"88 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" [id=88, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"89 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=89, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"90 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" [id=90, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__mul__];
"91 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=91, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"92 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" [id=92, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__mul__];
"93 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=93, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"94 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" [id=94, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__add__];
"95 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=95, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"96 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" [id=96, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=tanh];
"97 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=97, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"98 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" [id=98, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]", type=__mul__];
"99 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=99, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"100 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=100, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"101 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/cat" [id=101, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]", type=cat];
"102 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/view" [id=102, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]", type=view];
"103 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=103, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"104 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=104, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"105 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=105, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"106 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=106, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"107 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=107, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"108 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=108, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"109 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" [id=109, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__add__];
"110 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/chunk" [id=110, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=chunk];
"111 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=111, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"112 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" [id=112, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"113 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=113, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"114 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=114, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"115 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" [id=115, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"116 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=116, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"117 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=117, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"118 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" [id=118, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=tanh];
"119 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=119, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"120 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=120, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"121 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" [id=121, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=sigmoid];
"122 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=122, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"123 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" [id=123, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__mul__];
"124 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=124, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"125 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" [id=125, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__mul__];
"126 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=126, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"127 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" [id=127, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__add__];
"128 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=128, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"129 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" [id=129, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=tanh];
"130 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=130, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"131 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" [id=131, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]", type=__mul__];
"132 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=132, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"133 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=133, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"134 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/cat" [id=134, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]", type=cat];
"135 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/view" [id=135, scope="NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]", type=view];
"136 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" [id=136, scope="NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint", type=cat];
"137 NNCF_RNN/StackedRNN[rnn_impl]/cat" [id=137, scope="NNCF_RNN/StackedRNN[rnn_impl]", type=cat];
"138 NNCF_RNN/StackedRNN[rnn_impl]/view" [id=138, scope="NNCF_RNN/StackedRNN[rnn_impl]", type=view];
"139 NNCF_RNN/StackedRNN[rnn_impl]/cat" [id=139, scope="NNCF_RNN/StackedRNN[rnn_impl]", type=cat];
"140 NNCF_RNN/StackedRNN[rnn_impl]/view" [id=140, scope="NNCF_RNN/StackedRNN[rnn_impl]", type=view];
"141 /nncf_model_output" [id=141, scope="", type=nncf_model_output];
"142 /nncf_model_output" [id=142, scope="", type=nncf_model_output];
"143 /nncf_model_output" [id=143, scope="", type=nncf_model_output];
"0 /nncf_model_input" -> "1 AsymmetricQuantizer/asymmetric_quantize";
"1 AsymmetricQuantizer/asymmetric_quantize" -> "3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"2 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"3 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "4 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize";
"4 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize" -> "8 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"5 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "6 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"6 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize";
"7 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" -> "8 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"8 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/chunk";
"1 AsymmetricQuantizer/asymmetric_quantize" -> "36 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"5 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "31 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/chunk" -> "10 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/chunk" -> "13 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/chunk" -> "16 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"9 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/chunk" -> "19 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"10 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "11 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"11 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "12 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"12 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"13 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "14 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"14 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "15 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"15 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "22 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"16 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "17 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"17 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "18 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"18 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"19 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "20 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid";
"20 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/sigmoid" -> "21 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"21 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"22 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "23 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"23 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"24 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "25 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"25 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__";
"26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "27 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"27 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "28 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh";
"28 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/tanh" -> "29 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"29 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__";
"30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "31 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "33 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat";
"31 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "32 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize";
"33 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/cat" -> "34 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/view";
"34 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/view" -> "68 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"35 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "36 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"36 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "37 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize";
"37 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize" -> "41 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"38 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "39 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"38 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "64 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"39 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "40 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize";
"40 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" -> "41 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"41 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/chunk";
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/chunk" -> "43 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/chunk" -> "46 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/chunk" -> "49 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"42 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/chunk" -> "52 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"43 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "44 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"44 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "45 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"45 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "57 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"46 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "47 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"47 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"48 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "55 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"49 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "50 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh";
"50 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" -> "51 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"51 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "57 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"52 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "53 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid";
"53 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/sigmoid" -> "54 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"54 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"55 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "56 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"56 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"57 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "58 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"58 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__";
"59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "60 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"60 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "61 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh";
"61 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/tanh" -> "62 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"62 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__";
"63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "64 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "66 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/cat";
"64 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "65 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize";
"66 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/cat" -> "67 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/view";
"67 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/view" -> "68 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"68 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "69 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/AsymmetricQuantizer/asymmetric_quantize";
"69 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/AsymmetricQuantizer/asymmetric_quantize" -> "71 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"70 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "71 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"71 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "72 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize";
"72 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize" -> "76 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"73 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "74 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"73 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "99 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"74 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "75 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize";
"75 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" -> "76 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"76 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "77 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/chunk";
"77 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/chunk" -> "78 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"77 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/chunk" -> "81 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"77 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/chunk" -> "84 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"77 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/chunk" -> "87 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"78 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "79 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid";
"79 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" -> "80 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"80 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "92 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"81 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "82 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid";
"82 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" -> "83 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"83 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "90 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"84 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "85 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh";
"85 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" -> "86 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"86 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "92 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"87 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "88 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid";
"88 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/sigmoid" -> "89 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"89 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "98 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"90 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "91 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"91 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "94 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"92 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "93 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"93 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "94 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__";
"94 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "95 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"95 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "96 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh";
"96 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/tanh" -> "97 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"97 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "98 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__";
"98 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "99 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"26 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__add__" -> "139 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"30 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[0]/LSTMCellForwardNNCF[cell]/__mul__" -> "137 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"59 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__add__" -> "139 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"63 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[1]/LSTMCellForwardNNCF[cell]/__mul__" -> "137 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"69 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/AsymmetricQuantizer/asymmetric_quantize" -> "104 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"94 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__add__" -> "139 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"98 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "101 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/cat";
"98 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/__mul__" -> "137 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"99 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "100 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize";
"101 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/cat" -> "102 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/view";
"102 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[2]/view" -> "136 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"103 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "104 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"104 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "105 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize";
"105 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize" -> "109 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"106 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "107 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"106 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "132 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"107 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "108 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize";
"108 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" -> "109 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"109 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "110 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/chunk";
"110 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/chunk" -> "111 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"110 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/chunk" -> "114 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"110 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/chunk" -> "117 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"110 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/chunk" -> "120 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"111 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "112 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid";
"112 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" -> "113 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"113 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "125 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"114 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "115 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid";
"115 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" -> "116 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"116 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "123 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"117 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "118 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh";
"118 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" -> "119 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"119 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "125 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"120 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "121 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid";
"121 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/sigmoid" -> "122 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"122 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "131 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"123 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "124 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"124 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "127 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"125 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "126 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"126 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "127 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__";
"127 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "128 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"127 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__add__" -> "139 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"128 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "129 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh";
"129 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/tanh" -> "130 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"130 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "131 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__";
"131 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "132 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"131 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "134 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/cat";
"131 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/__mul__" -> "137 NNCF_RNN/StackedRNN[rnn_impl]/cat";
"132 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "133 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize";
"134 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/cat" -> "135 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/view";
"135 NNCF_RNN/StackedRNN[rnn_impl]/ModuleList[inners]/Recurrent[3]/view" -> "136 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat";
"136 NNCF_RNN/StackedRNN[rnn_impl]/StackedRNNResetPoint/cat" -> "143 /nncf_model_output";
"137 NNCF_RNN/StackedRNN[rnn_impl]/cat" -> "138 NNCF_RNN/StackedRNN[rnn_impl]/view";
"138 NNCF_RNN/StackedRNN[rnn_impl]/view" -> "141 /nncf_model_output";
"139 NNCF_RNN/StackedRNN[rnn_impl]/cat" -> "140 NNCF_RNN/StackedRNN[rnn_impl]/view";
"140 NNCF_RNN/StackedRNN[rnn_impl]/view" -> "142 /nncf_model_output";
}
