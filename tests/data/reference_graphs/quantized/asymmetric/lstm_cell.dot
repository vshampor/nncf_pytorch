strict digraph  {
"0 /nncf_model_input" [id=0, scope="", type=nncf_model_input];
"1 AsymmetricQuantizer/asymmetric_quantize" [id=1, scope=AsymmetricQuantizer, type=asymmetric_quantize];
"2 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=2, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"3 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" [id=3, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]", type=linear];
"4 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=4, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"5 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" [id=5, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]", type=asymmetric_quantize];
"6 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" [id=6, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]", type=linear];
"7 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" [id=7, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer", type=asymmetric_quantize];
"8 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add__" [id=8, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]", type=__add__];
"9 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=9, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"10 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk" [id=10, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]", type=chunk];
"11 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=11, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"12 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid" [id=12, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]", type=sigmoid];
"13 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=13, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"14 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid" [id=14, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]", type=sigmoid];
"15 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=15, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"16 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh" [id=16, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]", type=tanh];
"17 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=17, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"18 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid" [id=18, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]", type=sigmoid];
"19 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=19, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"20 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul__" [id=20, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]", type=__mul__];
"21 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=21, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"22 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul__" [id=22, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]", type=__mul__];
"23 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=23, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"24 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add__" [id=24, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]", type=__add__];
"25 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=25, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"26 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh" [id=26, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]", type=tanh];
"27 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" [id=27, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer", type=asymmetric_quantize];
"28 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul__" [id=28, scope="LSTMCellNNCF/LSTMCellForwardNNCF[cell]", type=__mul__];
"29 /nncf_model_output" [id=29, scope="", type=nncf_model_output];
"30 /nncf_model_output" [id=30, scope="", type=nncf_model_output];
"0 /nncf_model_input" -> "1 AsymmetricQuantizer/asymmetric_quantize";
"1 AsymmetricQuantizer/asymmetric_quantize" -> "3 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"2 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "3 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear";
"3 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/linear" -> "4 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize";
"4 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[input_linear]/AsymmetricQuantizer/asymmetric_quantize" -> "8 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add__";
"5 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/ModuleDict[pre_ops]/UpdateWeight[0]/AsymmetricQuantizer[op]/asymmetric_quantize" -> "6 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear";
"6 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/linear" -> "7 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize";
"7 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/NNCFLinear[hidden_linear]/AsymmetricQuantizer/asymmetric_quantize" -> "8 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add__";
"8 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add__" -> "9 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"9 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "10 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk";
"10 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk" -> "11 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"10 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk" -> "14 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid";
"10 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk" -> "16 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh";
"10 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/chunk" -> "18 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid";
"11 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "12 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid";
"12 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid" -> "13 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"13 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "22 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul__";
"14 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid" -> "15 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"15 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "20 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul__";
"16 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh" -> "17 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"17 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "22 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul__";
"18 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/sigmoid" -> "19 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"19 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "28 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul__";
"20 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul__" -> "21 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"21 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "24 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add__";
"22 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul__" -> "23 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"23 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "24 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add__";
"24 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__add__" -> "25 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"25 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "26 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh";
"25 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "30 /nncf_model_output";
"26 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/tanh" -> "27 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize";
"27 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/AsymmetricQuantizer/asymmetric_quantize" -> "28 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul__";
"28 LSTMCellNNCF/LSTMCellForwardNNCF[cell]/__mul__" -> "29 /nncf_model_output";
}
